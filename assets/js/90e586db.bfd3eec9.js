(self.webpackChunkcrypto_cheatsheet=self.webpackChunkcrypto_cheatsheet||[]).push([[92],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,m=c(t,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(l,".").concat(d)]||u[d]||s[d]||o;return n?r.createElement(f,i(i({ref:e},m),{},{components:n})):r.createElement(f,i({ref:e},m))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4137:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return m},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:6},l="Revocation",p={unversionedId:"common-commands/revocation",id:"common-commands/revocation",isDocsHomePage:!1,title:"Revocation",description:"Revocation (OCSP)",source:"@site/docs/common-commands/revocation.md",sourceDirName:"common-commands",slug:"/common-commands/revocation",permalink:"/crypto-cheatsheet/docs/common-commands/revocation",editUrl:"https://github.com/shawngmc/crypto-cheatsheet/edit/master/website/docs/common-commands/revocation.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Generating",permalink:"/crypto-cheatsheet/docs/common-commands/generating"},next:{title:"Testing SSL/TLS",permalink:"/crypto-cheatsheet/docs/common-commands/testing-ssl"}},m=[{value:"Revocation (OCSP)",id:"revocation-ocsp",children:[]},{value:"Revocation (CRL)",id:"revocation-crl",children:[]}],s={toc:m};function u(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"revocation"},"Revocation"),(0,o.kt)("h2",{id:"revocation-ocsp"},"Revocation (OCSP)"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Inputs"),(0,o.kt)("th",{parentName:"tr",align:null},"Action"),(0,o.kt)("th",{parentName:"tr",align:null},"Command"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Serial number and Issuer PEM"),(0,o.kt)("td",{parentName:"tr",align:null},"Check OCSP Status (Decimal)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"openssl ocsp  -no_nonce -serial 012345 -cert certificate.pem -text -url http://ocsp.my.ca.tld"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Serial number and Issuer PEM"),(0,o.kt)("td",{parentName:"tr",align:null},"Check OCSP Status (Hex)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"openssl ocsp -no_nonce -serial 0xAF1345 -cert certificate.pem -text -url http://ocsp.my.ca.tld"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Cert and Issuer PEM"),(0,o.kt)("td",{parentName:"tr",align:null},"Check OCSP Status"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"openssl ocsp  -no_nonce -issuer chain.pem -cert certificate.pem -text -url http://ocsp.my.ca.tld"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Either"),(0,o.kt)("td",{parentName:"tr",align:null},"Save Request and Response"),(0,o.kt)("td",{parentName:"tr",align:null},"Add ",(0,o.kt)("inlineCode",{parentName:"td"},"-respout ocsp.resp -reqout ocsp.req")," to save them to the current folder")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Replay Request"),(0,o.kt)("td",{parentName:"tr",align:null},"Replay with Curl"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'curl -v -o /dev/null --data-binary @ocsp.req -H "Content-Type: application/ocsp-request" --url http://ocsp.my.ca.tld'))))),(0,o.kt)("h2",{id:"revocation-crl"},"Revocation (CRL)"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Inputs"),(0,o.kt)("th",{parentName:"tr",align:null},"Action"),(0,o.kt)("th",{parentName:"tr",align:null},"Command"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PEM-CRL(Nx)"),(0,o.kt)("td",{parentName:"tr",align:null},"List CRL Issuers"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"\"csplit --prefix='cert.' --suffix-format='%03d.pem' --elide-empty-files multicert.pem '/-----BEGIN CERTIFICATE-----/' '{*}' find ./cert.*.pem -print0 \\| xargs -0r -I {} sh -c \"\"printf {}; openssl x509 -in {} -text\"\"\""))))))}u.isMDXComponent=!0}}]);